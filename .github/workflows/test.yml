name: Test

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
defaults:
  run:
    shell: bash
env:
  PUB_ENVIRONMENT: bot.github
permissions: read-all

jobs:
  test:
    name: "Test"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [autoequal, autoequal_gen, test_project]
    steps:
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@v4

      - id: setup_dart
        name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - id: install
        name: Install dependencies
        working-directory: ${{ matrix.package }}
        run: dart pub get

      - name: Check the formatting of one or more Dart files
        working-directory: ${{ matrix.package }}
        run: |
          set -e
          MAIN_DIRS=$(sh ../scripts/get_dirs.sh . test .dart_tool)
          TEST_DIRS=$(sh ../scripts/get_dirs.sh test base gen .dart_tool)

          echo "Formating..."
          echo "Main dirs: $MAIN_DIRS"
          echo "Test dirs: $TEST_DIRS"

          dart format --set-exit-if-changed $MAIN_DIRS $TEST_DIRS

      - name: Analyze the project's Dart code
        working-directory: ${{ matrix.package }}
        run: |
          set -e
          MAIN_DIRS=$(sh ../scripts/get_dirs.sh . test .dart_tool)
          TEST_DIRS=$(sh ../scripts/get_dirs.sh test base gen .dart_tool)

          echo "Analyzing..."
          echo "Main dirs: $MAIN_DIRS"
          echo "Test dirs: $TEST_DIRS"

          dart analyze --fatal-infos --fatal-warnings $MAIN_DIRS $TEST_DIRS

      - name: Run tests
        if: matrix.package == 'test_project'
        working-directory: ${{ matrix.package }}
        run: dart run derry test
